image:
  repository: "ghcr.io/rstudio/chronicle"
  tag: "latest"
  imagePullPolicy: "Always"

serviceaccount:
  create: false
  # -- Additional annotations to add to the chronicle-server serviceaccount
  annotations: {
    # EKS role arn example
    # eks.amazonaws.com/role-arn: my-aws-iam-role-arn
  }
  # -- Additional labels to add to the chronicle-server serviceaccount
  labels: {}

service:
  # -- The port to use for the REST service
  port: 80
  # -- Additional annotations to add to the chronicle-server service
  annotations: {}
  # -- Additional labels to add to the chronicle-server service
  labels: {}
  # -- Additional selector labels to add to the chronicle-server service
  selectorLabels: {}

# -- The number of replica pods to maintain for this service
replicas: 1

pod:
  # -- The command and args to run in the chronicle-server container
  command: "/chronicle"
  args: ["start", "-c", "/opt/chronicle/config.gcfg"]
  # -- Optional environment variables
  env: []
  # -- Additional annotations to add to the chronicle-server pods
  annotations: {}
  # -- Additional labels to add to the chronicle-server pods
  labels: {}
  # -- Additional selector labels to add to the chronicle-server pods
  selectorLabels: {}
  # -- A map used verbatim as the pod's "affinity" definition
  affinity: {}
  # -- A map used verbatim as the pod's "nodeSelector" definition
  nodeSelector: {}
  # -- An array used verbatim as the pod's "tolerations" definition
  tolerations: []

# We do want at least 1Gi of persistent volume space
# to perform compaction/compression operations
storage:
  persistentVolumeSize: 1Gi

config:
  https:
    # If https.enabled=true, we will ignore any http
    # values and enable https in our config instead
    enabled: false
    key: ""
    certificate: ""
  localStorage:
    enabled: true
    location: "./chronicle-data"
    retentionPeriod: "30d"
  s3Storage:
    enabled: false
    bucket: "posit-chronicle"
    prefix: ""
    profile: ""
    region: ""
    compactionEnabled: false
  metrics:
    enabled: true
  profiling:
    enabled: false
  logging:
    serviceLog: "STDOUT"
    serviceLogLevel: "INFO"
    serviceLogFormat: "TEXT"
