# This example deploys RStudio Package Manager with additional mounts
#
# This example shows how to mount an additional PVC to the Package Manager
# pods. This pattern of specifying the volumes and volumeMounts
# will work for a variety of volume types PVC, ConfigMap, etc.
#
# The focus of this example is on setting up additional mounts, however there
# are a few requirements to run Package manager.
# To use the example you will need a license file or key,
# a PostgreSQL database and either a ReadWriteMany
# POSIX compliant storage class for sharedStorage or S3.


# Using a license file with the helm chart:
# https://github.com/rstudio/helm/tree/main/charts/rstudio-pm#license-file
# If you would like to use a license key see this documentation:
# https://github.com/rstudio/helm/tree/main/charts/rstudio-pm#license-key
license:
  file:
    secret: posit-licenses # TODO: Change to the secret name in your cluster
    secretKey: packagemanager.lic # TODO: Change to the secret key containing your Package Manager license

# Configures Package Manager shared storage
# This should NOT be set if using S3 for storage
# Docs here on using S3 instead: https://github.com/rstudio/helm/tree/main/charts/rstudio-pm#s3-configuration
sharedStorage:
  create: true
  mount: true
  storageClassName: nfs-sc-rwx # TODO: Change to a RWX StorageClass available in your cluster
  # volumeName: pm-shared-pv-name # Only needed if PVs have been statically provisioned, in which case this will need to match the PV name.
  requests:
    storage: 100G

# This section is used to mount to the Package Manager container which is
# often used to add in additional configuration and TLS certificates.
pod:
  volumeMounts:
  - mountPath: /mnt/data # TODO: Change to your desired mount path
    name: extra-data
  volumes:
  - name: extra-data
    # Could be any type of volume... persistentVolumeClaim, configMap, etc.
    # Could also provision a PVC or PV via `extraObjects` if desired
    persistentVolumeClaim:
      claimName: extra-data-pvc # TODO: Change to an available PVC

config:
  Database:
    Provider: postgres
  Postgres:
    URL: "postgres://<USERNAME>@<HOST>:<PORT>/<DATABASE>" # TODO: Change this URI to reach your Postgres database.
    Password: "<PASSWORD>" # TODO: Remove this line and instead set the password during helm install with --set config.Postgres.Password=<your-postgres-password>
    UsageDataURL: "postgres://<USERNAME>@<HOST>:<PORT>/<DATABASE>" # TODO: Change this URI to reach your Postgres database for metrics. This must be either a seperate database or scheam from the main Package Manager database.
    UsageDataPassword: "<PASSWORD>" # TODO: Remove this line and instead set the password during helm install with --set config.Postgres.Password=<your-postgres-password>
