---
# Source: rstudio-workbench/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-rstudio-workbench
  namespace: rstudio
---
# Source: rstudio-workbench/templates/configmap-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-rstudio-workbench-secret
  namespace: rstudio
stringData:
  
  database.conf: |
  launcher.pem: |
    abc
    
  secure-cookie-key: |
    abc
---
# Source: rstudio-workbench/templates/configmap-general.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-rstudio-workbench-config
  namespace: rstudio
data:

  
  health-check: |
    # HELP active_sessions health_check metric Active RStudio sessions
    # TYPE active_sessions gauge
    active_sessions #active-sessions#
    # HELP idle_seconds health_check metric Time since active RStudio sessions
    # TYPE idle_seconds gauge
    idle_seconds #idle-seconds#
    # HELP cpu_percent health_check metric cpu (percentage)
    # TYPE cpu_percent gauge
    cpu_percent #cpu-percent#
    # HELP memory_percent health_check metric memory used (percentage)
    # TYPE memory_percent gauge
    memory_percent #memory-percent#
    # HELP swap_percent health_check metric swap used (percentage)
    # TYPE swap_percent gauge
    swap_percent #swap-percent#
    # HELP load_average health_check metric cpu load average
    # TYPE load_average gauge
    load_average #load-average#
    # HELP license_days_left the number of days left on the license
    # TYPE license_days gauge
    license_days_left #license-days-left#
    
  jupyter.conf: |
    default-session-cluster=Kubernetes
    jupyter-exe=/opt/python/3.6.5/bin/jupyter
    labs-enabled=1
    notebooks-enabled=1
  launcher.conf: |
    [cluster]
    name=Kubernetes
    type=Kubernetes
  
    [server]
    address=127.0.0.1
    admin-group=rstudio-server
    authorization-enabled=1
    enable-debug-logging=0
    port=5559
    server-user=rstudio-server
    thread-pool-size=4
  
  launcher.kubernetes.conf: |
    kubernetes-namespace=rstudio
    use-templating=0
  logging.conf: |
    [*]
    log-level=info
    logger-type=stderr
  
  rserver.conf: |
    admin-enabled=1
    auth-pam-sessions-enabled=1
    launcher-address=127.0.0.1
    launcher-default-cluster=Kubernetes
    launcher-port=5559
    launcher-sessions-callback-address=http://release-name-rstudio-workbench.rstudio.svc.cluster.local:80
    launcher-sessions-enabled=1
    monitor-graphite-client-id=rstudio
    monitor-graphite-enabled=1
    monitor-graphite-host=127.0.0.1
    monitor-graphite-port=9109
    server-health-check-enabled=1
    server-project-sharing=1
    www-port=8787
  vscode-user-settings.json: |
    {
          "terminal.integrated.shell.linux": "/bin/bash",
          "extensions.autoUpdate": false,
          "extensions.autoCheckUpdates": false
    }
    
  vscode.conf: |
    args=--verbose --host=0.0.0.0
    enabled=1
    exe=/opt/code-server/bin/code-server

  
  
  launcher.kubernetes.profiles.conf: |
  
    [*]
    allow-unknown-images=1
    container-images=rstudio/r-session-complete:bionic-2022.07.1-554.pro3
    default-container-image=rstudio/r-session-complete:bionic-2022.07.1-554.pro3
    job-json-overrides="/spec/template/spec/volumes/-":"/mnt/job-json-overrides-new/defaultSessionVolume.json","/spec/template/spec/containers/0/volumeMounts/-":"/mnt/job-json-overrides-new/defaultSessionVolumeMount.json"
  
  
  
  
  
  
  launcher-mounts: |
---
# Source: rstudio-workbench/templates/configmap-general.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-rstudio-workbench-overrides-new
  namespace: rstudio
data:
    
  defaultSessionVolume.json: |
    {
      "configMap": {
        "defaultMode": 420,
        "name": "release-name-rstudio-workbench-session"
      },
      "name": "session-config"
    }
  defaultSessionVolumeMount.json: |
    {
      "mountPath": "/mnt/session-configmap/rstudio",
      "name": "session-config"
    }
---
# Source: rstudio-workbench/templates/configmap-general.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-rstudio-workbench-templates
  namespace: rstudio
data:
  rstudio-library-templates-data.tpl: |
    {{- define "rstudio-library.templates.data" -}}
    {"job":{"annotations":{"seven":"eight"},"labels":{"nine":"ten"}},"pod":{"annotations":{"one":"two"},"extraContainers":[],"imagePullPolicy":"","imagePullSecrets":[],"initContainers":[],"labels":{"three":"four"},"serviceAccountName":"test","volumeMounts":[{"mountPath":"/tmp/mnt","name":"test"},{"mountPath":"/mnt/session-configmap/rstudio","name":"session-config"}],"volumes":[{"emptyDir":{},"name":"test"},{"configMap":{"defaultMode":420,"name":"release-name-rstudio-workbench-session"},"name":"session-config"}]},"service":{"annotations":{"five":"six"},"labels":{},"type":"ClusterIP"}}
    {{- end }}
  job.tpl: |
    # Version: 2
    # DO NOT MODIFY the "Version: " key
    # Helm Version: v1
    {{- $templateData := include "rstudio-library.templates.data" nil | mustFromJson }}
    apiVersion: batch/v1
    kind: Job
    metadata:
      generateName: {{ toYaml .Job.generateName }}
      annotations:
        {{- with $templateData.job.annotations }}
        {{- range $key, $val := . }}
        {{ $key }}: {{ toYaml $val | indent 4 | trimPrefix (repeat 4 " ") }}
        {{- end }}
        {{- end }}
      labels:
        {{- with $templateData.job.labels }}
        {{- range $key, $val := . }}
        {{ $key }}: {{ toYaml $val | indent 4 | trimPrefix (repeat 4 " ") }}
        {{- end }}
        {{- end }}
    spec:
      backoffLimit: 0
      template:
        metadata:
          annotations:
            {{- if .Job.tags }}
            {{- $i := 0 }}
            {{- range .Job.tags }}
            USER_TAG_{{ $i }}: {{ toYaml . | indent 8 | trimPrefix (repeat 8 " ") }}
            {{- $i = add $i 1 }}
            {{- end }}
            {{- end }}
            stdin: {{ toYaml .Job.stdin | indent 8 | trimPrefix (repeat 8 " ") }}
            user: {{ toYaml .Job.user }}
            name: {{ toYaml .Job.name }}
            service_ports: {{ toYaml .Job.servicePortsJson }}
            {{- with $templateData.pod.annotations }}
            {{- range $key, $val := . }}
            {{ $key }}: {{ toYaml $val | indent 8 | trimPrefix (repeat 8 " ") }}
            {{- end }}
            {{- end }}
          labels:
            {{- with $templateData.pod.labels }}
            {{- range $key, $val := . }}
            {{ $key }}: {{ toYaml $val | indent 8 | trimPrefix (repeat 8 " ") }}
            {{- end }}
            {{- end }}
          generateName: {{ toYaml .Job.generateName }}
        spec:
          {{- if .Job.host }}
          nodeName: {{ toYaml .Job.host }}
          {{- end }}
          restartPolicy: Never
          {{- with $templateData.pod.serviceAccountName }}
          serviceAccountName: {{- . }}
          {{- end }}
          shareProcessNamespace: {{ .Job.shareProcessNamespace }}
          {{- if or (ne (len .Job.volumes) 0) (ne (len $templateData.pod.volumes) 0) }}
          volumes:
            {{- range .Job.volumes }}
            - {{ nindent 10 (toYaml .) | trim -}}
            {{- end }}
            {{- range $templateData.pod.volumes }}
            - {{ nindent 10 (toYaml .) | trim -}}
            {{- end }}
          {{- end }}
          {{- if ne (len .Job.placementConstraints) 0 }}
          nodeSelector:
            {{- range .Job.placementConstraints }}
            {{ .name }}: {{ toYaml .value }}
            {{- end }}
          {{- end }}
          {{- $securityContext := dict }}
          {{- if .Job.container.runAsUserId }}
            {{- $_ := set $securityContext "runAsUser" .Job.container.runAsUserId }}
          {{- end }}
          {{- if .Job.container.runAsGroupId }}
            {{- $_ := set $securityContext "runAsGroup" .Job.container.runAsGroupId }}
          {{- end }}
          {{- if .Job.container.supplementalGroupIds }}
            {{- $groupIds := list }}
            {{- range .Job.container.supplementalGroupIds }}
              {{- $groupIds = append $groupIds . }}
            {{- end }}
            {{- $_ := set $securityContext "supplementalGroups" (cat "[" ($groupIds | join ", ") "]") }}
          {{- end }}
          {{- if $securityContext }}
          securityContext:
            {{- range $key, $val := $securityContext }}
            {{ $key }}: {{ $val }}
            {{- end }}
          {{- end }}
          {{- with $templateData.pod.imagePullSecrets }}
          imagePullSecrets: {{ toYaml . | nindent 12 }}
          {{- end }}
          initContainers:
            {{- with $templateData.pod.initContainers }}
              {{- range . }}
            - {{ toYaml . | indent 10 | trimPrefix (repeat 10 " ") }}
              {{- end }}
            {{- end }}
          containers:
            - name: rs-launcher-container
              image: {{ toYaml .Job.container.image }}
              {{- with $templateData.pod.imagePullPolicy }}
              imagePullPolicy: {{- . | nindent 12 }}
              {{- end }}
              {{- $isShell := false }}
              {{- if .Job.command }}
              command: ['/bin/sh']
              {{- $isShell = true }}
              {{- else }}
              command: [{{ toYaml .Job.exe }}]
              {{- $isShell = false }}
              {{- end }}
              {{- if .Job.stdin }}
              stdin: true
              {{- else }}
              stdin: false
              {{- end }}
              stdinOnce: true
              {{- if .Job.workingDirectory }}
              workingDir: {{ toYaml .Job.workingDirectory }}
              {{- end }}
              {{- if or (ne (len .Job.args) 0) $isShell }}
              args:
                {{- if $isShell }}
                - '-c'
                {{- if ne (len .Job.args) 0 }}
                - {{ .Job.args | join " " | cat .Job.command | toYaml | indent 12 | trimPrefix (repeat 12 " ") }}
                {{- else }}
                - {{ .Job.command | toYaml | indent 12 | trimPrefix (repeat 12 " ") }}
                {{- end }}
                {{- else }}
                {{- range .Job.args }}
                - {{ toYaml . | indent 12 | trimPrefix (repeat 12 " ") }}
                {{- end }}
                {{- end }}
              {{- end }}
              {{- $secrets := list }}
              {{- range .Job.config }}
                {{- if eq .name "secret" }}
                  {{- $packedSecret := .value }}
                  {{- $secret := dict }}
                  {{- $_ := set $secret "secret" (splitList ":" $packedSecret | first) }}
                  {{- $_ := set $secret "key" (slice (splitList ":" $packedSecret) 1 2 | first) }}
                  {{- $_ := set $secret "name" (splitList ":" $packedSecret | last) }}
                  {{- $secrets = append $secrets $secret }}
                {{- end }}
              {{- end }}
              {{- if or (ne (len .Job.environment) 0) (ne (len $secrets) 0) }}
              env:
                {{- range .Job.environment }}
                - name: {{ toYaml .name | indent 14 | trimPrefix (repeat 14 " ") }}
                  value: {{ toYaml .value | indent 14 | trimPrefix (repeat 14 " ") }}
                {{- end }}
                {{- range $secrets }}
                - name: {{ get . "name"}}
                  valueFrom:
                    secretKeyRef:
                      name: {{ get . "secret" }}
                      key: {{ get . "key" }}
                {{- end }}
              {{- end }}
              {{- $exposedPorts := list }}
              {{- range .Job.exposedPorts }}
                {{- if .publishedPort }}
                  {{- $exposedPorts = append $exposedPorts . }}
                {{- end }}
              {{- end }}
              {{- if ne (len $exposedPorts) 0 }}
              ports:
                {{- range $exposedPorts }}
                - containerPort: {{ .targetPort }}
                  hostPort: {{ .publishedPort }}
                {{- end }}
              {{- end }}
              {{- $limits := dict }}
              {{- $requests := dict }}
              {{- range .Job.resourceLimits }}
                {{- if eq .type "cpuCount" }}
                  {{- $_ := set $limits "cpu" .value }}
                  {{- if ne $.Job.cpuRequestRatio 1.0 }}
                    {{- $val := mulf .value $.Job.cpuRequestRatio | toString }}
                    {{- $_ := set $requests "cpu" $val }}
                  {{- end }}
                {{- else if eq .type "memory" }}
                  {{- $_ := set $limits "memory" (printf "%s%s" .value "M") }}
                  {{- if ne $.Job.memoryRequestRatio 1.0 }}
                    {{- $val := mulf .value $.Job.memoryRequestRatio }}
                    {{- $_ := set $requests "memory" (printf "%.2f%s" $val "M") }}
                  {{- end }}
                {{- else if eq .type "NVIDIA GPUs" }}
                  {{- $val := float64 .value }}
                  {{- if ne $val 0.0 }}
                    {{- $_ := set $limits "nvidia.com/gpu" $val }}
                  {{- end }}
                {{- else if eq .type "AMD GPUs" }}
                  {{- $val := float64 .value }}
                  {{- if ne $val 0.0 }}
                    {{- $_ := set $limits "amd.com/gpu" $val }}
                  {{- end }}
                {{- end }}
              {{- end }}
              {{- if any (ne (len $requests) 0) (ne (len $limits) 0) }}
              resources:
                {{- if ne (len $requests) 0 }}
                requests:
                  {{- range $key, $val := $requests }}
                  {{ $key }}: {{ toYaml $val }}
                  {{- end }}
                {{- end }}
                {{- if ne (len $limits) 0 }}
                limits:
                  {{- range $key, $val := $limits }}
                  {{ $key }}: {{ toYaml $val }}
                  {{- end }}
                {{- end }}
              {{- end }}
              {{- if or (ne (len .Job.volumes) 0) (ne (len $templateData.pod.volumeMounts) 0) }}
              volumeMounts:
                {{- range .Job.volumeMounts }}
                - {{ nindent 14 (toYaml .) | trim -}}
                {{- end }}
                {{- range $templateData.pod.volumeMounts }}
                - {{ nindent 14 (toYaml .) | trim -}}
                {{- end }}
              {{- end }}
            {{- with $templateData.pod.extraContainers }}
              {{- toYaml . | nindent 8 }}
            {{- end }}
    
  service.tpl: |
    # Version: 2
    # DO NOT MODIFY the "Version: " key
    # Helm Version: v1
    {{- $templateData := include "rstudio-library.templates.data" nil | mustFromJson }}
    apiVersion: v1
    kind: Service
    metadata:
      name: {{ .Job.serviceName }}
      annotations:
        {{- with $templateData.service.annotations }}
        {{- range $key, $val := . }}
        {{ $key }}: {{ toYaml $val | indent 4 | trimPrefix (repeat 4 " ") }}
        {{- end }}
        {{- end }}
      labels:
        job-name: {{ toYaml .Job.id }}
        {{- with $templateData.service.labels }}
        {{- range $key, $val := . }}
        {{ $key }}: {{ toYaml $val | indent 8 | trimPrefix (repeat 8 " ") }}
        {{- end }}
        {{- end }}
    spec:
      ports:
        {{- $i := 0 }}
        {{- range .Job.exposedPorts }}
        {{- if not .publishedPort }}
        - name: {{ printf "port%d" $i }}
          protocol: {{ .protocol }}
          port: {{ .targetPort }}
          targetPort: {{ .targetPort }}
          {{- $i = add $i 1 }}
        {{- end }}
        {{- end }}
      selector:
        job-name: {{toYaml .Job.id }}
      clusterIP: ''
      type: {{ $templateData.service.type }}
---
# Source: rstudio-workbench/templates/configmap-graphite-exporter.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-rstudio-workbench-graphite
  namespace: rstudio
data:
  graphite-mapping.yaml: |-
    mappings:
    - match: "rstudio\\.([\\w-]+)\\.system\\.load\\.(.*)"
      match_type: regex
      name: "rstudio_system_load"
      labels:
        host: "$1"
        duration: "$2"
    - match: "rstudio\\.([\\w-]+)\\.(.*)"
      match_type: regex
      name: "rstudio_$2"
      labels:
        host: "$1"
---
# Source: rstudio-workbench/templates/configmap-prestart.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-rstudio-workbench-prestart
  namespace: rstudio
data:
  prestart-workbench.bash: |
    #!/bin/bash
    set -o errexit
    set -o pipefail
    
    main() {
      local startup_script="${1:-/usr/local/bin/startup.sh}"
      local dyn_dir='/mnt/dynamic/rstudio'
    
      local launcher_pem='/mnt/secret-configmap/rstudio/launcher.pem'
      local launcher_pub="${dyn_dir}/launcher.pub"
    
      _logf 'Ensuring %s exists' "${dyn_dir}"
      mkdir -p "${dyn_dir}"
    
      if [[ ! -s "${launcher_pub}" ]] && [[ -f "${launcher_pem}" ]]; then
        _logf 'Generating %s from %s' "${launcher_pub}" "${launcher_pem}"
        openssl rsa -in "${launcher_pem}" -outform PEM -pubout -out "${launcher_pub}" 2>&1 | _indent
        chmod -v 600 "${launcher_pub}" 2>&1 | _indent
      else
        _logf 'Ensuring %s does not exist' "${launcher_pub}"
        rm -vf "${launcher_pub}" 2>&1 | _indent
      fi
    
      if [[ -n "$RSW_LOAD_BALANCING" ]]; then
        _logf "Enabling load-balancing by making sure that the /mnt/load-balancer/rstudio/load-balancer file exists"
        mkdir -p /mnt/load-balancer/rstudio/
        echo -e "balancer=sessions\nwww-host-name=$(hostname -i)" > /mnt/load-balancer/rstudio/load-balancer
      fi
    
      _logf 'Preparing dirs'
      mkdir -p \
        /var/lib/rstudio-server/monitor/log
      chown -v -R \
        rstudio-server:rstudio-server \
        /var/lib/rstudio-server 2>&1 | _indent
    
      _writeEtcRstudioReadme
    
      # TODO: necessary until https://github.com/rstudio/rstudio-pro/issues/3638
      cp /mnt/configmap/rstudio/health-check /mnt/dynamic/rstudio/
    
      _logf 'Replacing process with %s' "${startup_script}"
      exec "${startup_script}"
    }
    
    _logf() {
      local msg="${1}"
      shift
      local now
      now="$(date -u +%Y-%m-%dT%H:%M:%S)"
      local format_string
      format_string="$(printf '#----> prestart-workbench.bash %s: %s' "${now}" "${msg}")\\n"
      # shellcheck disable=SC2059
      printf "${format_string}" "${@}"
    }
    
    _indent() {
      sed -u 's/^/       /'
    }
    
    _writeEtcRstudioReadme() {
      _logf 'Writing README to empty /etc/rstudio directory'
      (cat <<$HERE$
    The contents of this configuration directory have been moved to other directories
    in order to facilitate running in Kubernetes. The directories are specified via
    the XDG_CONFIG_DIRS environment variable defined in the Helm chart. The currently
    defined directories are:
    
    $(echo "$XDG_CONFIG_DIRS" | sed 's/:/\n/g')
    $HERE$
      ) > /etc/rstudio/README
    }
    
    main "${@}"
    
  prestart-launcher.bash: |
    #!/bin/bash
    set -o errexit
    set -o pipefail
    
    main() {
      local startup_script="${1:-/usr/lib/rstudio-server/bin/rstudio-launcher}"
      local dyn_dir='/mnt/dynamic/rstudio'
    
      local cacert='/var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
      local k8s_url="https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}"
    
      _logf 'Loading service account token'
      local sa_token
      sa_token="$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)"
    
      _logf 'Ensuring %s exists' "${dyn_dir}"
      mkdir -p "${dyn_dir}"
    
      # Empty if enabled, set to "disabled" by default
      if [[ -z "${RSTUDIO_LAUNCHER_STARTUP_HEALTH_CHECK}" ]]; then
        _logf 'Checking kubernetes health via %s' "${k8s_url}"
        # shellcheck disable=SC2086
        curl ${RSTUDIO_LAUNCHER_STARTUP_HEALTH_CHECK_ARGS} \
          -H "Authorization: Bearer ${sa_token}" \
          --cacert "${cacert}" \
          "${k8s_url}/livez?verbose" 2>&1 | _indent
        printf '\n'
      else
        _logf "Not checking kubernetes health because RSTUDIO_LAUNCHER_STARTUP_HEALTH_CHECK=${RSTUDIO_LAUNCHER_STARTUP_HEALTH_CHECK}"
        printf '\n'
      fi
    
      _logf 'Configuring certs'
      cp -v "${cacert}" ${dyn_dir}/k8s-cert 2>&1 | _indent
      mkdir -p /usr/local/share/ca-certificates/Kubernetes
      cp -v \
        ${dyn_dir}/k8s-cert \
        /usr/local/share/ca-certificates/Kubernetes/cert-Kubernetes.crt 2>&1 | _indent
    
      _logf 'Updating CA certificates'
      PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \
        update-ca-certificates 2>&1 | _indent
    
      _logf 'Preparing dirs'
      mkdir -p \
        /var/lib/rstudio-launcher/Local \
        /var/lib/rstudio-launcher/Kubernetes
      chown -v -R \
        rstudio-server:rstudio-server \
        /var/lib/rstudio-launcher/Local 2>&1 | _indent
    
      _logf 'Replacing process with %s' "${startup_script}"
      exec "${startup_script}"
    }
    
    _logf() {
      local msg="${1}"
      shift
      local now
      now="$(date -u +%Y-%m-%dT%H:%M:%S)"
      local format_string
      format_string="$(printf '#----> prestart-launcher.bash %s: %s' "${now}" "${msg}")\\n"
      # shellcheck disable=SC2059
      printf "${format_string}" "${@}"
    }
    
    _indent() {
      sed -u 's/^/       /'
    }
    
    main "${@}"
---
# Source: rstudio-workbench/templates/configmap-session.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-rstudio-workbench-session
  namespace: rstudio
data:
  
  notifications.conf: |
  repos.conf: |
    CRAN=https://packagemanager.rstudio.com/cran/__linux__/bionic/latest
    RSPM=https://packagemanager.rstudio.com/cran/__linux__/bionic/latest
  rsession.conf: |
---
# Source: rstudio-workbench/templates/configmap-startup.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-rstudio-workbench-start-rsw
  namespace: rstudio
data:
  rstudio-workbench.conf: |
    [program:rstudio-workbench]
    command=/scripts/prestart-workbench.bash /usr/local/bin/startup.sh
    autorestart=false
    numprocs=1
    stdout_logfile=/dev/stdout
    stdout_logfile_maxbytes=0
    stderr_logfile=/dev/stderr
    stderr_logfile_maxbytes=0
---
# Source: rstudio-workbench/templates/configmap-startup.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-rstudio-workbench-start-launcher
  namespace: rstudio
data:
  rstudio-launcher.conf: |
    [program:rstudio-launcher]
    command=/scripts/prestart-launcher.bash /usr/lib/rstudio-server/bin/rstudio-launcher
    autorestart=false
    numprocs=1
    stdout_logfile=/dev/stdout
    stdout_logfile_maxbytes=0
    stderr_logfile=/dev/stderr
    stderr_logfile_maxbytes=0
---
# Source: rstudio-workbench/templates/configmap-startup.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-rstudio-workbench-start-user
  namespace: rstudio
data:
  
  sssd.conf: |
    [program:sssd]
    command=/usr/sbin/sssd -i -c /etc/sssd/sssd.conf --logger=stderr
    autorestart=false
    numprocs=1
    stdout_logfile=/dev/stdout
    stdout_logfile_maxbytes=0
    stdout_logfile_backups=0
    stderr_logfile=/dev/stderr
    stderr_logfile_maxbytes=0
    stderr_logfile_backups=0
---
# Source: rstudio-workbench/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-rstudio-workbench
  namespace: rstudio
rules:
  - apiGroups:
      - ""
    resources:
      - "pods/log"
    verbs:
      - "get"
      - "watch"
      - "list"
  - apiGroups:
      - ""
    resources:
      - "pods"
      - "pods/attach"
      - "pods/exec"
    verbs:
      - "get"
      - "create"
      - "update"
      - "patch"
      - "watch"
      - "list"
      - "delete"
  - apiGroups:
      - ""
    resources:
      - "events"
    verbs:
      - "watch"
  - apiGroups:
      - ""
    resources:
      - "services"
    verbs:
      - "create"
      - "get"
      - "watch"
      - "list"
      - "delete"
  - apiGroups:
      - "batch"
    resources:
      - "jobs"
    verbs:
      - "create"
      - "update"
      - "patch"
      - "get"
      - "watch"
      - "list"
      - "delete"
  - apiGroups:
      - "metrics.k8s.io"
    resources:
      - "pods"
    verbs:
      - "get"
---
# Source: rstudio-workbench/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-rstudio-workbench
  namespace: rstudio
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-rstudio-workbench
subjects:
  - kind: ServiceAccount
    name: release-name-rstudio-workbench
    namespace: rstudio
---
# Source: rstudio-workbench/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-rstudio-workbench
  namespace: rstudio
  labels:
    helm.sh/chart: rstudio-workbench-0.5.20-rc01
    app.kubernetes.io/name: rstudio-workbench
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2022.07.1-554.pro3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: rstudio-workbench
    app.kubernetes.io/instance: release-name
  ports:
  - protocol: TCP
    name: http
    port: 80
    targetPort: 8787
  - name: metrics
    port: 9108
---
# Source: rstudio-workbench/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-rstudio-workbench
  namespace: rstudio
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 100%
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: rstudio-workbench
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config-general: 406ebd8de6831787d09dcd97eb2865bac80fa50c5848250ea734d51d8b605ac5
        checksum/config-graphite: 9e9249a6820fceccee72ec5c0811fe22cc8a91eabd085164826ff92b3d693b36
        checksum/config-prestart: 80ff25c04b7848168cdbb4308d4b6c211baed5b9454e7dd3f3e694419236d81f
        checksum/config-secret: ad52e25359a651886a989483098b1d6a177e1a5871803e5992bdd591dd82ebc4
        checksum/config-session: 79990c0cc9486c7c12fe2dcb19cf9989deb5f4bbffcfe26931614a95ada278fe
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "9108"
        
      labels:
        app.kubernetes.io/name: rstudio-workbench
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-rstudio-workbench
      shareProcessNamespace: false      
      containers:
      - name: rstudio
        image: "rstudio/rstudio-workbench:2022.07.1-554.pro3"
        env:
        - name: RSTUDIO_LAUNCHER_STARTUP_HEALTH_CHECK_ARGS
          value: "-fsSL"
        - name: RSTUDIO_LAUNCHER_NAMESPACE
          value: "rstudio"
        
        - name: RSW_LAUNCHER
          value: "true"
        - name: RSW_TESTUSER
          value: ""
        - name: XDG_CONFIG_DIRS
          value: "/mnt/dynamic:/mnt/session-configmap:/mnt/secret-configmap:/mnt/configmap:/mnt/load-balancer/"
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 8787
          name: http
        securityContext:
          {}
        volumeMounts:
          - name: rstudio-prestart
            mountPath: "/scripts/"
          - name: rstudio-config
            mountPath: "/mnt/configmap/rstudio/"
          - name: rstudio-session-config
            mountPath: "/mnt/session-configmap/rstudio/"
          - name: rstudio-secret
            mountPath: "/mnt/secret-configmap/rstudio/"
          - name: etc-rstudio
            mountPath: "/etc/rstudio"
          - name: rstudio-rsw-startup
            mountPath: "/startup/base"
          - name: rstudio-launcher-startup
            mountPath: "/startup/launcher"
          - name: rstudio-user-startup
            mountPath: "/startup/user-provisioning"
          
          - name: rstudio-job-overrides-new
            mountPath: "/mnt/job-json-overrides-new"
          # mount into the default scratch-path... what if it gets changed?
          - name: session-templates
            mountPath: "/var/lib/rstudio-launcher/Kubernetes/rstudio-library-templates-data.tpl"
            subPath: "rstudio-library-templates-data.tpl"
          - name: session-templates
            mountPath: "/var/lib/rstudio-launcher/Kubernetes/job.tpl"
            subPath: "job.tpl"
          - name: session-templates
            mountPath: "/var/lib/rstudio-launcher/Kubernetes/service.tpl"
            subPath: "service.tpl"
        resources:
          limits:
        readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /health-check
                  port: 8787
                initialDelaySeconds: 3
                periodSeconds: 3
                successThreshold: 1
                timeoutSeconds: 1
      - name: exporter
        image: "prom/graphite-exporter:v0.9.0"
        imagePullPolicy: "IfNotPresent"
        args:
          - "--graphite.mapping-config=/mnt/graphite/graphite-mapping.yaml"
        volumeMounts:
          - name: graphite-exporter-config
            mountPath: "/mnt/graphite/"
        ports:
        - containerPort: 9108
          name: metrics
      volumes:
      - name: rstudio-job-overrides-new
        configMap:
          name: release-name-rstudio-workbench-overrides-new
          defaultMode: 420
      - name: etc-rstudio
        emptyDir: {}
      - name: rstudio-config
        configMap:
          name: release-name-rstudio-workbench-config
          defaultMode: 420
      - name: rstudio-session-config
        configMap:
          name: release-name-rstudio-workbench-session
          defaultMode: 420
      - name: rstudio-prestart
        configMap:
          name: release-name-rstudio-workbench-prestart
          defaultMode: 493
      - name: rstudio-rsw-startup
        configMap:
          name: release-name-rstudio-workbench-start-rsw
          defaultMode: 493
      - name: rstudio-launcher-startup
        configMap:
          name: release-name-rstudio-workbench-start-launcher
          defaultMode: 493
      - name: rstudio-user-startup
        configMap:
          name: release-name-rstudio-workbench-start-user
          defaultMode: 493
      - name: rstudio-secret
        secret:
          secretName: release-name-rstudio-workbench-secret
          defaultMode: 384
      
      - name: graphite-exporter-config
        configMap:
          name: release-name-rstudio-workbench-graphite
          defaultMode: 420
      - name: session-templates
        configMap:
          name: release-name-rstudio-workbench-templates
          defaultMode: 420
---
# Source: rstudio-workbench/templates/tests/test-verify-installation.yaml
apiVersion: v1
kind: Pod
metadata:
  name: release-name-rstudio-workbench-test
  annotations:
   "helm.sh/hook": test
spec:
  serviceAccountName: release-name-rstudio-workbench
  shareProcessNamespace: false
  restartPolicy: Never
  
  containers:
  - name: rstudio
    image: "rstudio/rstudio-workbench:2022.07.1-554.pro3"
    env:
    - name: DIAGNOSTIC_DIR
      value: "/var/log/rstudio"
    - name: DIAGNOSTIC_ONLY
      value: "true"
    - name: DIAGNOSTIC_ENABLE
      value: "true"
    - name: RSTUDIO_LAUNCHER_STARTUP_HEALTH_CHECK_ARGS
      value: "-fsSL"
    - name: RSTUDIO_LAUNCHER_NAMESPACE
      value: "rstudio"
    
    - name: RSW_LAUNCHER
      value: "true"
    - name: RSW_TESTUSER
      value: "rstudio"
    - name: RSW_TESTUSER_UID
      value: "10000"
    - name: RSW_TESTUSER_PASSWD
      value: "rstudio"
    - name: XDG_CONFIG_DIRS
      value: "/mnt/dynamic:/mnt/session-configmap:/mnt/secret-configmap:/mnt/configmap:/mnt/load-balancer/"
    imagePullPolicy: "IfNotPresent"
    ports:
    - containerPort: 8787
      name: http
    securityContext:
      {}
    volumeMounts:
      - name: rstudio-prestart
        mountPath: "/scripts/"
      - name: rstudio-config
        mountPath: "/mnt/configmap/rstudio/"
      - name: rstudio-session-config
        mountPath: "/mnt/session-configmap/rstudio/"
      - name: rstudio-secret
        mountPath: "/mnt/secret-configmap/rstudio/"
      - name: etc-rstudio
        mountPath: "/etc/rstudio"
      - name: rstudio-rsw-startup
        mountPath: "/startup/base"
      - name: rstudio-launcher-startup
        mountPath: "/startup/launcher"
      - name: rstudio-user-startup
        mountPath: "/startup/user-provisioning"
      
      - name: rstudio-job-overrides-new
        mountPath: "/mnt/job-json-overrides-new"
      # mount into the default scratch-path... what if it gets changed?
      - name: session-templates
        mountPath: "/var/lib/rstudio-launcher/Kubernetes/rstudio-library-templates-data.tpl"
        subPath: "rstudio-library-templates-data.tpl"
      - name: session-templates
        mountPath: "/var/lib/rstudio-launcher/Kubernetes/job.tpl"
        subPath: "job.tpl"
      - name: session-templates
        mountPath: "/var/lib/rstudio-launcher/Kubernetes/service.tpl"
        subPath: "service.tpl"
    resources:
      limits:
  volumes:
  - name: rstudio-job-overrides-new
    configMap:
      name: release-name-rstudio-workbench-overrides-new
      defaultMode: 420
  - name: etc-rstudio
    emptyDir: {}
  - name: rstudio-config
    configMap:
      name: release-name-rstudio-workbench-config
      defaultMode: 420
  - name: rstudio-session-config
    configMap:
      name: release-name-rstudio-workbench-session
      defaultMode: 420
  - name: rstudio-prestart
    configMap:
      name: release-name-rstudio-workbench-prestart
      defaultMode: 493
  - name: rstudio-rsw-startup
    configMap:
      name: release-name-rstudio-workbench-start-rsw
      defaultMode: 493
  - name: rstudio-launcher-startup
    configMap:
      name: release-name-rstudio-workbench-start-launcher
      defaultMode: 493
  - name: rstudio-user-startup
    configMap:
      name: release-name-rstudio-workbench-start-user
      defaultMode: 493
  - name: rstudio-secret
    secret:
      secretName: release-name-rstudio-workbench-secret
      defaultMode: 384
  
  - name: session-templates
    configMap:
      name: release-name-rstudio-workbench-templates
      defaultMode: 420
